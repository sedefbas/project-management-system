server:
  port: 8085
  address: 0.0.0.0

spring:
  application:
    name: project_yonetim_sistemi

  kafka:
    consumer:
      auto-offset-reset: earliest
      bootstrap-servers: localhost:29092
      group-id: kafka-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      acks: -1
      bootstrap-servers: localhost:29092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    template:
      notification-created-topic: notification-created


  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
    show-sql: true

  datasource:
    url: jdbc:mysql://${MYSQL_HOST:localhost}:3306/yonetim
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver

  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:bassedef98@gmail.com}
    password: ${MAIL_PASSWORD:ilzq nhsa zdel fpuq}
    properties:
      mail:
        transport:
          protocol: smtp
        smtp:
          auth: true
          starttls:
            enable: true

  # liquibase:
  #   enabled: true
  #   changeLog: "classpath:db/changelog/db.changelog-master.yaml"
  #   drop-first: ${PRJ_LIQUIBASE_ENABLE_DROP_FIRST:false}

  data:
    mongodb:
      uri: mongodb+srv://bassedef98:1234@yonetimmongo.53k5l.mongodb.net/?retryWrites=true&w=majority&appName=yonetimMongo
      database: user

application:
  front-end:
    url: ${FRONT_END_URL:http://localhost:5173}
  security:
    jwt:
      private-key: ${PRIVATE_KEY_PATH:src/main/resources/certs/private.key}
      public-key: ${PUBLIC_KEY_PATH:src/main/resources/certs/public.key}
      expiration: ${TOKEN_EXPIRE_MILLISECOND:86400000}
      refresh-token:
        expiration: ${REFRESH_TOKEN_EXPIRE_MILLISECOND:604800000}
      guest-token:
        expiration: ${GUEST_TOKEN_EXPIRE_MILLISECOND:604800000}

iyzico:
  apiKey: "sandbox-YIeS7SDwadvQXUY26824xOfVp2utB1Fg"
  secretKey: "sandbox-mWT88UW4eOKknM3KLim3As2yuCWd1xiM"
  baseUrl: "https://sandbox-api.iyzipay.com"

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

project:
  scheduler:
    invalid-tokens-deletion:
      cron: ${INVALID_TOKENS_DELETION_CRON:0 0 */3 * * ?}
      enable: ${INVALID_TOKENS_DELETION_ENABLED:true}
